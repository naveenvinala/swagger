openapi: 3.0.0
info:
  title: Sample Book Mangement App
  description: This is a sample server for a pet store.
  termsOfService: http://example.com/terms/
  contact:
   name: API Support
   url: http://www.example.com/support
   email: support@example.com
  license:
   name: Apache 2.0
   url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
 
servers:
  - url: http://localhost:4000/api/v1
  - url: http://dev-api.example.com
 
paths:
  /get_books:
    get:
      security:
       - bearerAuth: []
      summary: 'Get all books from the store'
      responses:
        '200':
          description: 'successful retrieved'
          content:
            application/json:
             schema:
              $ref: '#components/schemas/Books'
        '404': 
           $ref: '#/components/responses/404NotFound'
        '401':
          description: Access token is missing or invalid
  /create_book:
    post:
      summary: Add a new book
      requestBody:
        description: Id is auto genrated so add title & author
        content:
          'application/x-www-form-urlencoded': 
            schema:
              $ref: '#/components/schemas/Book'
          'application/json': 
            schema:
              $ref: '#/components/schemas/Book'
            examples:
               $ref: '#/components/examples/bookExample'
      responses:
        '201':
          description: Created
          content:
            application/json:
             schema:
              $ref: '#components/schemas/Book'
        '404': 
           $ref: '#/components/responses/404NotFound'
        default:
          description: Unexpected error

components:
  schemas:
    Books:
      type: array
      items:
        type: object
        properties:
          id:
           type: integer
           format: int64
          title:
           type: string
          author:
           type: string
      example:
        - id : K2c53lvJ
          title: The New Turing Omnibu
          author: Alexander 
        - id : K2c53lvJ
          title: The New Turing Omnibu
          author: Alexander 
    Book:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
      required:
         - title
         - author
      

  examples: 
    bookExample: 
      title: The nn Great
      author: Alexander 

  responses:
    404NotFound:  
      description: The specified book was not found.
 
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  ApiResponse:
    type: 'object'
    properties:
      code:
        type: 'integer'
        format: 'int32'
      type:
        type: 'string'
      message:
        type: 'string'     